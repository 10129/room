<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    <!-- don't handle the static resource -->
    <mvc:default-servlet-handler />
    <!-- 对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。即解决了@Controller标识的类的bean的注入和使用。 -->
    <mvc:annotation-driven/>
    <!--1、/index重定向/-->
    <mvc:view-controller path="/index" view-name="redirect:/"/>
    <mvc:view-controller path="/view/user/tables" view-name="/user/tables"/>
    <!--2、如果当前路径是/ 则交给相应的视图解析器直接解析为视图 得到的视图时 /WEB-INF/view/index.html-->
    <mvc:view-controller path="/" view-name="/index"/>
    <!-- 3、配置静态资源，直接映射到对应的文件夹，DispatcherServlet 不处理 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />
    <mvc:resources mapping="/lib/**" location="/lib/" />
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/**" location="/WEB-INF/view/" />

     <!--视图model映射 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/view/" />
        <!-- 后缀 -->
        <property name="suffix" value=".html" />
    </bean>

    <!-- 视图 For FreeMarker -->
    <bean id="freemarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
        </property>
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="requestContextAttribute" value="request"/>
        <property name="order" value="0"/>
        <property name="cache" value="true" />
        <!--<property name="prefix" value="/WEB-INF/view/"/>-->
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
    </bean>

    <!-- freemarker 配置 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- freemarker 配置模板路径.例如：index.html在 pages/index文件夹下，可直接访问index/index.html ，value 默认带上pages -->
        <!--<property name="templateLoaderPath" value="/WEB-INF/view" />-->
        <property name="templateLoaderPaths">
            <list>
                <value>/WEB-INF/view</value>
                <value>/WEB-INF/templates</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    <!-- 主要作用于@Controller，激活该模式 下面是一种简写形式，完全可以手动配置替代这种简写形式； 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
          两个bean, 是spring MVC为@Controllers分发请求所必须的 -->
    <mvc:annotation-driven />
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <!-- <property name="maxUploadSize" value=""/> -->
    </bean>
    <!-- 导入自定义的@Controller  -->
    <import resource="controllers.xml" />
</beans>
